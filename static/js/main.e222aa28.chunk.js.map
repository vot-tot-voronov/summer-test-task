{"version":3,"sources":["components/data-context/DataContext.js","components/messageBox/MessageBox.js","components/utils.js","components/header-field/HeaderField.js","components/form-field/FormField.js","components/ticket-order/TicketOrder.js","components/app/App.js","index.js"],"names":["DataContext","createContext","DataProvider","children","useState","data","setData","Provider","value","setValues","values","prevData","useData","useContext","MessageBox","React","memo","obj","hasOwnProperty","passangers","Message","Header","List","map","item","index","Item","lastName","firstName","birth","genderOptions","key","text","citizenship","typeOfDocument","rateOptions","HeaderField","number","remove","className","Grid","Column","floated","width","as","color","Button","type","size","icon","labelPosition","onClick","Icon","name","FormField","useForm","mode","defaultValues","snils_csm","middleName","gender","document","documentNumber","rate","handleSubmit","errors","setValue","trigger","control","useFieldArray","fields","append","submitForm","a","fetch","method","headers","body","JSON","stringify","status","Swal","fire","deletePassenger","length","Form","noValidate","onSubmit","Field","id","defaultValue","render","Input","label","onChange","e","Group","widths","error","rules","required","message","Select","options","placeholder","TicketOrder","padded","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e222aa28.chunk.js","sourcesContent":["import React, {useContext, useState, createContext} from 'react';\r\n\r\nconst DataContext = createContext();\r\n\r\nexport const DataProvider = ({children}) => {\r\n    const [data, setData] = useState({});\r\n    const setValues = (values) => {\r\n        setData(prevData => {\r\n            return {\r\n                ...prevData,\r\n                ...values\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <DataContext.Provider value={{data, setValues}}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useData = () => useContext(DataContext)","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nexport const MessageBox = React.memo(({obj}) => {\r\n    if (obj.hasOwnProperty(\"passangers\")) {\r\n        const {passangers} = obj;\r\n        return (\r\n            <Message>\r\n                <Message.Header>Информация о пассажирах</Message.Header>\r\n                <Message.List>\r\n                    {passangers.map((item, index) => {\r\n                        return (\r\n                            <Message.Item key={index}>\r\n                                {item.lastName} {item.firstName} ({item.birth})\r\n                            </Message.Item>\r\n                        )\r\n                    })}\r\n                </Message.List>\r\n            </Message>\r\n        )\r\n    } else {\r\n        return (\r\n            <Message>\r\n                <Message.Header>Информация о пассажирах</Message.Header>\r\n            </Message>)\r\n    }\r\n})\r\n\r\n","export const genderOptions = [\r\n    { key: 'm', text: 'Мужчина', value: 'male' },\r\n    { key: 'f', text: 'Женщина', value: 'female' }\r\n]\r\nexport const citizenship = [\r\n    { key: 'r', text: 'Россия', value: 'russia' },\r\n    { key: 'u', text: 'Украина', value: 'ukraine' },\r\n    { key: 'b', text: 'Беларусь', value: 'belarus' }\r\n]\r\nexport const typeOfDocument = [\r\n    { key: 'p', text: 'Паспорт', value: 'passport' }\r\n]\r\nexport const rateOptions = [\r\n    { key: 's', text: 'Стандартный', value: 'standart' }\r\n]","import React from 'react';\r\nimport { Grid, Header, Button, Icon } from 'semantic-ui-react';\r\nimport './header-field.css';\r\n\r\nexport const HeaderField = ({number, remove}) => {\r\n    return (\r\n        <div className={`${number === 1 ? '' : 'custom-header'} custom-header-mb`}>\r\n            <Grid>\r\n                <Grid.Column floated=\"left\" width={6}>\r\n                    <Header as=\"h2\" color=\"red\">Пассажир №{number}</Header>\r\n                </Grid.Column>\r\n                <Grid.Column floated=\"right\" width={4}>\r\n                    <Button type=\"button\" size=\"mini\" color=\"red\" icon labelPosition='left'\r\n                        onClick={remove}>\r\n                        <Icon name='minus'/>\r\n                        Удалить пассажира\r\n                    </Button>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { Form, Button, Icon} from 'semantic-ui-react';\r\nimport { useForm, Controller, useFieldArray } from 'react-hook-form';\r\nimport { genderOptions, citizenship, typeOfDocument, rateOptions } from '../utils';\r\nimport { HeaderField } from '../header-field/HeaderField';\r\nimport { useData } from '../data-context/DataContext';\r\nimport Swal from 'sweetalert2';\r\nimport './form-field.css';\r\n\r\nexport const FormField = () => {\r\n    const {handleSubmit, errors, setValue, trigger, control} = useForm({\r\n        mode: 'onBlur',\r\n        defaultValues: {\r\n            passangers: [{\r\n                snils_csm: \"\", lastName: \"\", firstName: \"\", middleName: \"\",\r\n                gender: \"\", birth: \"\", citizenship: \"\",\r\n                document: \"\", documentNumber: \"\", rate: \"\"\r\n            }]\r\n        }\r\n    });\r\n    const { fields, append, remove } = useFieldArray({\r\n        name: \"passangers\",\r\n        control\r\n    });\r\n    const { setValues } = useData()\r\n    const submitForm = async (data) => {\r\n        try {\r\n            const res = await fetch('https://webhook.site/958a6132-d38d-49b0-80d0-b1feba0cd7cf', {\r\n                method: 'POST',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n            if (res.status === 200) {\r\n                Swal.fire(\"Данные успешно отправленны\", \"Билеты придут Вам на почту\", \"success\");\r\n                setValues(data);\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\"Что-то пошло не так\", \"Попробуйте еще раз\", \"error\");\r\n        }\r\n    };\r\n    const deletePassenger = (index) => {\r\n        if (fields.length !== 1) {\r\n            remove(index);\r\n        }\r\n    };\r\n    return (\r\n        <Form noValidate onSubmit={handleSubmit(submitForm)}>\r\n            {fields.map((item, index) => {\r\n                return (\r\n                    <div key={item.id}>\r\n                        <HeaderField remove={() => deletePassenger(index)} number={index + 1}/>\r\n                        <Form.Field\r\n                            id={`passangers[${index}].snils_csm`}\r\n                            width={6}>\r\n                            <Controller\r\n                                name={`passangers[${index}].snils_csm`}\r\n                                control={control}\r\n                                defaultValue=\"\"\r\n                                render={() => {\r\n                                    return <Form.Input \r\n                                        label=\"СНИЛС или номер регистрации ЦСМ\"\r\n                                        name={`passangers[${index}].snils_csm`}\r\n                                        type=\"number\"\r\n                                        onChange={(e, {name, value}) => setValue(name, value)}\r\n                                    />\r\n                                }}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.Field\r\n                                id={`passangers[${index}].lastName`}\r\n                                error={!!errors?.passangers?.[index]?.lastName}>\r\n                                <Controller\r\n                                    rules={{required: \"Это поле обязательно\"}}\r\n                                    name={`passangers[${index}].lastName`}\r\n                                    control={control} \r\n                                    defaultValue=\"\" \r\n                                    render={() => {\r\n                                        return <Form.Input \r\n                                            required\r\n                                            name={`passangers[${index}].lastName`}\r\n                                            label=\"Фамилия\"\r\n                                            type=\"text\"\r\n                                            onChange={(e, {name, value}) => {\r\n                                                setValue(name, value)\r\n                                                trigger(name)\r\n                                            }}\r\n                                        />\r\n                                    }}\r\n                                />\r\n                                <span>{errors?.passangers?.[index]?.lastName?.message}</span>\r\n                            </Form.Field>\r\n                            <Form.Field\r\n                                id={`passangers[${index}].firstName`}\r\n                                error={!!errors?.passangers?.[index]?.firstName}>\r\n                                <Controller\r\n                                    rules={{required: \"Это поле обязательно\"}} \r\n                                    name={`passangers[${index}].firstName`}\r\n                                    control={control} \r\n                                    defaultValue=\"\" \r\n                                    render={() => {\r\n                                        return <Form.Input \r\n                                            required\r\n                                            name={`passangers[${index}].firstName`}\r\n                                            label=\"Имя\"\r\n                                            type=\"text\"\r\n                                            onChange={(e, {name, value}) => {\r\n                                                setValue(name, value)\r\n                                                trigger(name)\r\n                                            }}\r\n                                        />\r\n                                    }}\r\n                                />\r\n                                <span>{errors?.passangers?.[index]?.firstName?.message}</span>\r\n                            </Form.Field>\r\n                            <Form.Field\r\n                                id={`passangers[${index}].middleName`}>\r\n                                <Controller\r\n                                    name={`passangers[${index}].middleName`}\r\n                                    control={control} \r\n                                    defaultValue=\"\" \r\n                                    render={() => {\r\n                                        return <Form.Input\r\n                                            name={`passangers[${index}].middleName`}\r\n                                            label=\"Отчество (обязательно при наличии)\"\r\n                                            type=\"text\"\r\n                                            onChange={(e, {name, value}) => setValue(name, value)}\r\n                                        />\r\n                                    }}\r\n                                />\r\n                            </Form.Field>\r\n                        </Form.Group>\r\n                        <Form.Group widths='equal'>\r\n                            <Form.Field\r\n                                error={!!errors?.passangers?.[index]?.gender}\r\n                                id={`passangers[${index}].gender`}>\r\n                                <Controller\r\n                                    rules={{required: \"Это поле обязательно\"}}\r\n                                    defaultValue=\"\"\r\n                                    name={`passangers[${index}].gender`}\r\n                                    control={control}\r\n                                    render={() => (\r\n                                        <Form.Select \r\n                                            required\r\n                                            name={`passangers[${index}].gender`}\r\n                                            label=\"Пол\"\r\n                                            onChange={(e, { name, value }) => {\r\n                                                setValue(name, value)\r\n                                                trigger(name)\r\n                                            }}\r\n                                            options={genderOptions}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                                <span>{errors?.passangers?.[index]?.gender?.message}</span>\r\n                            </Form.Field>\r\n                            <Form.Field\r\n                                id={`passangers[${index}].birth`}\r\n                                error={!!errors?.passangers?.[index]?.birth}>\r\n                                <Controller \r\n                                    name={`passangers[${index}].birth`}\r\n                                    defaultValue=\"\"\r\n                                    control={control}\r\n                                    rules={{required: \"Это поле обязательно\"}}\r\n                                    render={() => {\r\n                                        return <Form.Input \r\n                                            required\r\n                                            type=\"text\"\r\n                                            name={`passangers[${index}].birth`}\r\n                                            label=\"Дата рождения\"\r\n                                            placeholder=\"__-__-____\"\r\n                                            onChange={(e, {name, value}) => {\r\n                                                setValue(name, value)\r\n                                                trigger(name)\r\n                                            }}\r\n                                        />\r\n                                    }}\r\n                                />\r\n                                <span>{errors?.passangers?.[index]?.birth?.message}</span>\r\n                            </Form.Field>\r\n                            <Form.Field\r\n                                error={!!errors?.passangers?.[index]?.citizenship}\r\n                                id={`passangers[${index}].citizenship`}>\r\n                                <Controller\r\n                                    rules={{required: \"Это поле обязательно\"}}\r\n                                    defaultValue=\"\"\r\n                                    name={`passangers[${index}].citizenship`}\r\n                                    control={control}\r\n                                    render={() => (\r\n                                        <Form.Select \r\n                                            required\r\n                                            name={`passangers[${index}].citizenship`}\r\n                                            label=\"Гражданство\"\r\n                                            onChange={(e, { name, value }) => {\r\n                                                setValue(name, value)\r\n                                                trigger(name)\r\n                                            }}\r\n                                            options={citizenship}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                                <span>{errors?.passangers?.[index]?.citizenship?.message}</span>\r\n                            </Form.Field>\r\n                        </Form.Group>\r\n                        <Form.Group widths='equal'>\r\n                            <Form.Field\r\n                                error={!!errors?.passangers?.[index]?.document}\r\n                                id={`passangers[${index}].document`}>\r\n                                <Controller\r\n                                    rules={{required: \"Это поле обязательно\"}}\r\n                                    defaultValue=\"\"\r\n                                    name={`passangers[${index}].document`}\r\n                                    control={control}\r\n                                    render={() => (\r\n                                        <Form.Select \r\n                                            required\r\n                                            name={`passangers[${index}].document`}\r\n                                            label=\"Тип документа\"\r\n                                            onChange={(e, { name, value }) => {\r\n                                                setValue(name, value)\r\n                                                trigger(name)\r\n                                            }}\r\n                                            options={typeOfDocument}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                                <span>{errors?.passangers?.[index]?.document?.message}</span>\r\n                            </Form.Field>\r\n                            <Form.Field\r\n                                id={`passangers[${index}].documentNumber`}\r\n                                error={!!errors?.passangers?.[index]?.documentNumber}>\r\n                                <Controller \r\n                                    name={`passangers[${index}].documentNumber`}\r\n                                    defaultValue=\"\"\r\n                                    control={control}\r\n                                    rules={{required: \"Это поле обязательно\"}}\r\n                                    render={() => {\r\n                                        return <Form.Input \r\n                                            required\r\n                                            type=\"number\"\r\n                                            name={`passangers[${index}].documentNumber`}\r\n                                            label=\"Номер документа\"\r\n                                            onChange={(e, {name, value}) => {\r\n                                                setValue(name, value)\r\n                                                trigger(name)\r\n                                            }}\r\n                                        />\r\n                                    }}\r\n                                />\r\n                                <span>{errors?.passangers?.[index]?.documentNumber?.message}</span>\r\n                            </Form.Field>\r\n                            <Form.Field\r\n                                error={!!errors?.passangers?.[index]?.rate}\r\n                                id={`passangers[${index}].rate`}>\r\n                                <Controller\r\n                                    rules={{required: \"Это поле обязательно\"}}\r\n                                    defaultValue=\"\"\r\n                                    name={`passangers[${index}].rate`}\r\n                                    control={control}\r\n                                    render={() => (\r\n                                        <Form.Select \r\n                                            required\r\n                                            name={`passangers[${index}].rate`}\r\n                                            label=\"Тариф\"\r\n                                            onChange={(e, { name, value }) => {\r\n                                                setValue(name, value)\r\n                                                trigger(name)\r\n                                            }}\r\n                                            options={rateOptions}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                                <span>{errors?.passangers?.[index]?.rate?.message}</span>\r\n                            </Form.Field>\r\n                        </Form.Group>\r\n                        <Form.Field>\r\n                            <Button type=\"button\" size=\"mini\" color=\"blue\" \r\n                                icon labelPosition='left'\r\n                                onClick={() => append({\r\n                                    snils_csm: \"\", lastName: \"\", firstName: \"\", middleName: \"\",\r\n                                    gender: \"\", birth: \"\", citizenship: \"\",\r\n                                    document: \"\", documentNumber: \"\", rate: \"\"\r\n                                })}\r\n                                >\r\n                                <Icon name='plus'/>\r\n                                Добавить пассажира\r\n                            </Button>\r\n                        </Form.Field>\r\n                    </div>\r\n                )\r\n            })}\r\n            <Form.Field>\r\n                <div className=\"send-btn\">\r\n                    <Button type=\"submit\" size=\"mini\" color=\"green\">Отправить</Button>\r\n                </div>\r\n            </Form.Field>\r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { MessageBox } from '../messageBox/MessageBox';\r\nimport { FormField } from '../form-field/FormField';\r\nimport { useData } from '../data-context/DataContext';\r\n\r\nexport const TicketOrder = () => {\r\n    const {data} = useData()\r\n    return (\r\n        <Grid padded>\r\n            <Grid.Column floated=\"left\" width={10}>\r\n                <FormField />\r\n            </Grid.Column>\r\n            <Grid.Column floated=\"right\" width={6}>\r\n                <MessageBox obj={data}/>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {TicketOrder} from '../ticket-order/TicketOrder';\r\n\r\nexport const App = () => {\r\n    return (\r\n        <>\r\n            <TicketOrder />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {DataProvider} from './components/data-context/DataContext';\nimport {App} from './components/app/App';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <DataProvider>\n    <App />\n  </DataProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}